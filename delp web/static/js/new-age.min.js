/*!
 * Start Bootstrap - New Age v4.0.0-beta.2 (https://startbootstrap.com/template-overviews/new-age)
 * Copyright 2013-2017 Start Bootstrap
 * Licensed under MIT (https://github.com/BlackrockDigital/startbootstrap-new-age/blob/master/LICENSE)
 */

 ! function(a) {
    "use strict";
    a('a.js-scroll-trigger[href*="#"]:not([href="#"])').click(function() {
        if (location.pathname.replace(/^\//, "") == this.pathname.replace(/^\//, "") && location.hostname == this.hostname) {
            var e = a(this.hash);
            if ((e = e.length ? e : a("[name=" + this.hash.slice(1) + "]")).length) return a("html, body").animate({
                scrollTop: e.offset().top - 48
            }, 1e3, "easeInOutExpo"), !1
        }
    }), a(".js-scroll-trigger").click(function() {
        a(".navbar-collapse").collapse("hide")
    }), a("body").scrollspy({
        target: "#mainNav",
        offset: 54
    });
    var e = function() {
        a("#mainNav").offset().top > 100 ? a("#mainNav").addClass("navbar-shrink") : a("#mainNav").removeClass("navbar-shrink")
    };
    e(), a(window).scroll(e)
}(jQuery);



//ChartJS Graph Data
//Change routing for chart
$.getJSON("https://raw.githubusercontent.com/averyyip/capone/master/app/static/data/prediction.json", function(data) {
    //console.log($("#myChart"));
    const myChart = document.getElementById("calendar").getContext("2d");

    //sort through my json data which has created an array of objects and return the listed parameters
    const neighborhoods = data.map(function(location) {
        return location.Amount;
    });
    const nightlyCost = data.map(function(location) {
        return location.Date;
    });
    const bookingFrequency = data.map(function(location) {
        return location.Past_Amounts;
    });

    const chartOptions = {
        type: 'line',
        data: {
            labels: nightlyCost,
            datasets: [{
                    label: "Predictive Spend",
                    data: neighborhoods,
                    fill: true,
                    backgroundColor: randomColor(),
                    //cubicInterpolationMode: 'monotone'
                    //backgroundColor: 'rgba(245, 215, 199, 1)',
                },
                {
                    type: 'line',
                    label: "Historic Data",
                    data: bookingFrequency,
                    backgroundColor: randomColor(),
                    fill: true,
                    ticks: {
                        reverse: true
                    }
                }
            ]
        },
        //The code immediately preceeding options creates adds stylistic elements to my charts
        options: {
            legend: {
                display: true,
                backgroundColor: 'rgba(255, 255, 255, 0)',
            },
            title: {
                display: true,
                text: 'ARIMA PREDICTIONS'
            },
            tooltips: {
      callbacks: {
          labelColor: function(tooltipItem, chartOptions) {
              return {
                  borderColor: 'rgb(255, 0, 0)',
                  backgroundColor: 'rgb(255, 0, 0)'
              }
          },
          labelTextColor:function(tooltipItem, chartOptions){
              return '#fff';
          }
      }
  }
        }
    };

    return new Chart(myChart, chartOptions);
});
